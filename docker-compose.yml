version: "3.8"

services:
  nginx:
    image: nginx:1.25.3
    container_name: nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/configuration/custom_proxy_settings.conf:/etc/nginx/conf.d/custom_proxy_settings.conf
    networks:
      - shiny-network
    depends_on:
      - identity
      - shiny-gateway
      - copilot-api
      - shiny-ui
  identity:
    build: ./identity
    container_name: identity
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_PROXY: ${KC_PROXY}
      KC_DB: ${KC_DB}
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_HTTP_PORT: ${KC_HTTP_PORT}
    volumes:
      - ./identity/themes/shiny/theme:/opt/keycloak/themes
    depends_on:
      - db-postgres
    networks:
      - shiny-network
  db-postgres:
    build: ./docker/postgres
    image: debezium/postgres:15-alpine
    hostname: ${POSTGRES_HOST}
    container_name: db-postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./docker/postgres/postgresql.conf.sample:/usr/share/postgresql/postgresql.conf.sample
      - ./docker/postgres/postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql
      - postgres:/var/lib/postgresql/data
    command: postgres -c 'max_connections=500'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - shiny-network
  shiny-gateway:
    build: ./shiny-gateway
    container_name: shiny-gateway
    ports:
      - "${GATEWAY_PORT}:3000"
    volumes:
      - ./shiny-gateway:/app
    environment:
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${SHINY_DB_NAME}
    networks:
      - shiny-network
  shiny-ui:
    build: ./shiny-ui
    container_name: shiny-ui
    ports:
      - "${SHINY_UI_PORT}:3001"
    networks:
      - shiny-network
  copilot-api:
    build: ./copilot-api
    image: ghcr.io/ngtrdai/shiny-copilot-api:latest
    container_name: copilot-api
    ports:
      - "${COPILOT_API_PORT}:8000"
    # depends_on:
    #   - db-mongo
    networks:
      - shiny-network
  # db-mongo:
  #   image: mongo:latest
  #   container_name: db-mongo
  #   ports:
  #     - "{MOOMONGO_PORT}:27017"
  #   volumes:
  #     - ./mongo-db-data:/data/db

volumes:
  mongo-db-data:
  postgres:

networks:
  shiny-network:
    driver: bridge
    name: shiny-network